# Transposing
POLCON_desc4 <- t(POLCON_desc4)
POLCON_desc4
# For POLCONVJ
POLCON_desc5 <- summaryBy(POLCONVJ~CTRYNM, data=POLCON, FUN=mean, na.rm = TRUE)
POLCON_desc5
# Remove countries with missing values
POLCON_desc5 <- POLCON_desc5[complete.cases(POLCON_desc5), ]
POLCON_desc5 <- mystats(POLCON_desc5$POLCONVJ.mean)
POLCON_desc5
class(POLCON_desc5) # Should be matrix
# Converting to matrix and trying to name
POLCON_desc5 <- as.matrix(POLCON_desc5)
dimnames(POLCON_desc5) <- list(c("N", "Mean", "Median", "Max", "Min", "Std.dev."),c("POLCONVJ"))
POLCON_desc5
# Transposing
POLCON_desc5 <- t(POLCON_desc5)
POLCON_desc5
# Merge all POLCON measures
POLCON_desc3
POLCON_desc6 <- rbind(POLCON_desc3, POLCON_desc4)
POLCON_desc7 <- rbind(POLCON_desc6, POLCON_desc5)
POLCON_desc7
## Making table with Henisz results
heniszPOLCON <- matrix(c(121,0.25,0.00,0.88,0.00,0.33, 44,0.29,0.26,0.80,0.00,0.27), nrow = 2,
ncol = 6, byrow = TRUE,
dimnames = list(c("POLCON", "POLCONJ"),
c("N", "Mean", "Median", "Max", "Min", "Std.dev.")))
heniszPOLCON
## @knitr POLCON_tab
library(xtable)
print(xtable(POLCON_desc, label='POLCON_tab',caption='Descriptive statistics of the variables on political constraints', table.placement = h)) # Output as LaTeX.
print(xtable(POLCON_desc7, label='POLCON_tab2',caption='Descriptive statistics of the variables on political constraints on a country level', table.placement = h)) # Output as LaTeX.
print(xtable(heniszPOLCON, label='heniszPOLCON',caption='Descriptive statistics of the variables on political constraints as obtained by Henisz (2000) on a country level', table.placement = h)) # Output as LaTeX.
# # Test to see what happens when the option na.omit is set to FALSE
# POLCON_desc2 <- sapply(POLCON_vars, mystats, na.omit=FALSE)
# POLCON_desc2 <- t(POLCON_desc2) # Transposing the matrix
# print(xtable(POLCON_desc2, label='POLCON_tab2',caption='Descriptive statistics of the variables on political constraints (Henisz 2000)', sanitize.text.function = function(x){x}, table.placement = h), digits = 2) # Output as LaTeX.
## @knitr PWT
#### Penn World Table: ki, kg, rgdl ####
# ## Reading PWT data set
pwt71 <- read.csv("~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/pwt71_11302012version/pwt71_wo_country_names_wo_g_vars.csv")
head(pwt71)
# write to Stata file
library(foreign)
write.dta(pwt71, "~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/pwt71a.dta", version=10)
# This command runs the Stata do file in the specified folder
system("PATH=$PATH:/Applications/Stata/Stata.app/Contents/MacOS/:. ; Stata -e do /Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/Master_thesis.do") # It is needed to calculate the growth rate
# Read Stata file
pwt71 <- read.dta("/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/pwt71.dta")
ls(pwt71)
head(pwt71)
# Dropping irrelevant variables
str(pwt71)
pwt71 <- pwt71[c("isocode", "year", "rgdpl", "kg", "ki", "rgdpl2", "gdpgrowth")]
ls(pwt71)
pwt71 <- na.omit(pwt71) # Removing missing observations
head(pwt71, n=25)
# Descriptive statistics for rgdpl
rgdpl <- summaryBy(rgdpl~isocode, data=pwt71, FUN=mean, na.rm = TRUE)
rgdpl
rgdpl <- mystats(rgdpl$rgdpl.mean)
rgdpl
class(rgdpl) # Should be matrix
# Converting to matrix and trying to name
rgdpl <- as.matrix(rgdpl)
dimnames(rgdpl) <- list(c("N", "Mean", "Median", "Max", "Min", "Std.dev."),c("rgdpl"))
rgdpl
# Transposing
rgdpl <- t(rgdpl)
rgdpl
# Descriptive statistics of gdpgrowth
library(plyr)
ls(pwt71)
head(pwt71)
pwt71 <- na.omit(pwt71)
head(pwt71)
gdpgrowth9 <- ddply(pwt71,~isocode,summarise,mean=mean(gdpgrowth, na.rm = TRUE), max.yr=max(year), min.yr=min(year))
gdpgrowth9
png('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_hist.png')
hist(gdpgrowth9$mean, breaks = 20, main=NULL, xlab="GDP growth")
dev.off()
## Create variable with initial gdp value
# Create new variable that is missing if rgdpl is missing and otherwise year to use for function that looks up earliest year that is not missing
pwt71$yearNA <- ifelse(is.na(pwt71$rgdpl), pwt71$yearNA <- NA, pwt71$year)
# Show data
head(pwt71, n=10)
# Here the pwt71 data is split into country groups along with variable year and rgdpl
countries <- split(pwt71[,2:6], pwt71$isocode)
# Show the first country in the list countries
countries[1]
# Create function that finds gdp in earliest year that is not missing
vlookup7 <- function(df){
df[df[5] == min(df[5], na.rm=TRUE), 2]
}
# Use lapply
inigdp <- lapply(countries, vlookup7)
inigdp[1]
# Remove NAs
inigdp <- lapply(inigdp, function(x) x[!is.na(x)])
inigdp
# Re-assembling the data
pwt71$inigdp <- unsplit(inigdp, pwt71$isocode)
head(pwt71, n=10)
# Deleting the variable yearNA
pwt71$yearNA <- NULL
head(pwt71, n=10)
ls(pwt71)
countries[1]
## @knitr POLCON
#### POLCON: POLCONIII, POLCONV, POLCONJ, law.order ####
# POLCON <- read.delim("~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/Henisz/POLCON_2010_tabsep.txt")
# POLCON <- POLCON[c("CTRYNM", "Year", "POLCONIII", "POLCONV", "POLCONVJ", "Law...Order..from.ICRG.")] # Dropping irrelevant variables
# ls(POLCON) # Checking which variables I have
# write.csv(POLCON, file = "~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/Henisz/POLCON.csv", row.names = FALSE) # Writing data set, because the original is very large
POLCON <- read.csv("~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/Henisz/POLCON.csv")
ls(POLCON)
POLCON$llaw.order <- log(POLCON$Law...Order..from.ICRG.)
# What are the number of observations per country?
summary(POLCON$CTRYNM)
library(foreign)
## Trying to get descriptive statistics by country
# dstats <- function(x)(c(min=min(x), max=max(x))
# POLCON_vars1 <- POLCON[c("Year")]
# by(POLCON_vars1, POLCON$CTRYNM, dstats)
# warnings()
mystats <- function(x, na.omit=TRUE){
if (na.omit)
x <- x[!is.na(x)]
m <- mean(x)
med <- median (x)
n <- length(x)
s <- sd(x)
min <- min(x)
max <- max(x)
skew <- sum((x-m)^3/s^3)/n
kurt <- sum((x-m)^4/s^4)/n - 3
return(c(n=n, mean=m, median=med, max=max, min=min, stdev=s))
}
POLCON_vars <- POLCON[c("POLCONIII", "POLCONV", "POLCONVJ")]
POLCON_desc <- sapply(POLCON_vars, mystats, na.omit=TRUE)
is.matrix(POLCON_desc)
POLCON_desc <- t(POLCON_desc) # Transposing the matrix
class(POLCON_desc)
str(POLCON_desc)
## Trying to get descriptive statistics by country
#install.packages("doBy")
library(doBy)
# Data for POLCONIII
POLCON_desc2 <- summaryBy(POLCONIII~CTRYNM, data=POLCON, FUN=mean, na.rm = TRUE)
POLCON_desc2
POLCON_desc3 <- mystats(POLCON_desc2$POLCONIII.mean)
POLCON_desc3
class(POLCON_desc3) # Should be matrix
# Converting to matrix and trying to name
POLCON_desc3 <- as.matrix(POLCON_desc3)
dimnames(POLCON_desc3) <- list(c("N", "Mean", "Median", "Max", "Min", "Std.dev."),c("POLCONIII"))
POLCON_desc3
# Transposing
POLCON_desc3 <- t(POLCON_desc3)
POLCON_desc3
# For POLCONV
POLCON_desc4 <- summaryBy(POLCONV~CTRYNM, data=POLCON, FUN=mean, na.rm = TRUE)
POLCON_desc4
# Remove countries with missing values
POLCON_desc4 <- POLCON_desc4[complete.cases(POLCON_desc4), ]
POLCON_desc4 <- mystats(POLCON_desc4$POLCONV.mean)
POLCON_desc4
class(POLCON_desc4) # Should be matrix
# Converting to matrix and trying to name
POLCON_desc4 <- as.matrix(POLCON_desc4)
dimnames(POLCON_desc4) <- list(c("N", "Mean", "Median", "Max", "Min", "Std.dev."),c("POLCONV"))
POLCON_desc4
# Transposing
POLCON_desc4 <- t(POLCON_desc4)
POLCON_desc4
# For POLCONVJ
POLCON_desc5 <- summaryBy(POLCONVJ~CTRYNM, data=POLCON, FUN=mean, na.rm = TRUE)
POLCON_desc5
# Remove countries with missing values
POLCON_desc5 <- POLCON_desc5[complete.cases(POLCON_desc5), ]
POLCON_desc5 <- mystats(POLCON_desc5$POLCONVJ.mean)
POLCON_desc5
class(POLCON_desc5) # Should be matrix
# Converting to matrix and trying to name
POLCON_desc5 <- as.matrix(POLCON_desc5)
dimnames(POLCON_desc5) <- list(c("N", "Mean", "Median", "Max", "Min", "Std.dev."),c("POLCONVJ"))
POLCON_desc5
# Transposing
POLCON_desc5 <- t(POLCON_desc5)
POLCON_desc5
# Merge all POLCON measures
POLCON_desc3
POLCON_desc6 <- rbind(POLCON_desc3, POLCON_desc4)
POLCON_desc7 <- rbind(POLCON_desc6, POLCON_desc5)
POLCON_desc7
## Making table with Henisz results
heniszPOLCON <- matrix(c(121,0.25,0.00,0.88,0.00,0.33, 44,0.29,0.26,0.80,0.00,0.27), nrow = 2,
ncol = 6, byrow = TRUE,
dimnames = list(c("POLCON", "POLCONJ"),
c("N", "Mean", "Median", "Max", "Min", "Std.dev.")))
heniszPOLCON
## @knitr POLCON_tab
library(xtable)
print(xtable(POLCON_desc, label='POLCON_tab',caption='Descriptive statistics of the variables on political constraints', table.placement = h)) # Output as LaTeX.
print(xtable(POLCON_desc7, label='POLCON_tab2',caption='Descriptive statistics of the variables on political constraints on a country level', table.placement = h)) # Output as LaTeX.
print(xtable(heniszPOLCON, label='heniszPOLCON',caption='Descriptive statistics of the variables on political constraints as obtained by Henisz (2000) on a country level', table.placement = h)) # Output as LaTeX.
# # Test to see what happens when the option na.omit is set to FALSE
# POLCON_desc2 <- sapply(POLCON_vars, mystats, na.omit=FALSE)
# POLCON_desc2 <- t(POLCON_desc2) # Transposing the matrix
# print(xtable(POLCON_desc2, label='POLCON_tab2',caption='Descriptive statistics of the variables on political constraints (Henisz 2000)', sanitize.text.function = function(x){x}, table.placement = h), digits = 2) # Output as LaTeX.
## @knitr PWT
#### Penn World Table: ki, kg, rgdl ####
# ## Reading PWT data set
pwt71 <- read.csv("~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/pwt71_11302012version/pwt71_wo_country_names_wo_g_vars.csv")
head(pwt71)
# write to Stata file
library(foreign)
write.dta(pwt71, "~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/pwt71a.dta", version=10)
# This command runs the Stata do file in the specified folder
system("PATH=$PATH:/Applications/Stata/Stata.app/Contents/MacOS/:. ; Stata -e do /Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/Master_thesis.do") # It is needed to calculate the growth rate
# Read Stata file
pwt71 <- read.dta("/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/pwt71.dta")
ls(pwt71)
head(pwt71)
# Dropping irrelevant variables
str(pwt71)
pwt71 <- pwt71[c("isocode", "year", "rgdpl", "kg", "ki", "rgdpl2", "gdpgrowth")]
ls(pwt71)
pwt71 <- na.omit(pwt71) # Removing missing observations
head(pwt71, n=25)
# Descriptive statistics for rgdpl
rgdpl <- summaryBy(rgdpl~isocode, data=pwt71, FUN=mean, na.rm = TRUE)
rgdpl
rgdpl <- mystats(rgdpl$rgdpl.mean)
rgdpl
class(rgdpl) # Should be matrix
# Converting to matrix and trying to name
rgdpl <- as.matrix(rgdpl)
dimnames(rgdpl) <- list(c("N", "Mean", "Median", "Max", "Min", "Std.dev."),c("rgdpl"))
rgdpl
# Transposing
rgdpl <- t(rgdpl)
rgdpl
# Descriptive statistics of gdpgrowth
library(plyr)
ls(pwt71)
head(pwt71)
pwt71 <- na.omit(pwt71)
head(pwt71)
gdpgrowth9 <- ddply(pwt71,~isocode,summarise,mean=mean(gdpgrowth, na.rm = TRUE), max.yr=max(year), min.yr=min(year))
gdpgrowth9
png('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_hist.png')
hist(gdpgrowth9$mean, breaks = 20, main=NULL, xlab="GDP growth")
dev.off()
## Create variable with initial gdp value
# Create new variable that is missing if rgdpl is missing and otherwise year to use for function that looks up earliest year that is not missing
pwt71$yearNA <- ifelse(is.na(pwt71$rgdpl), pwt71$yearNA <- NA, pwt71$year)
# Show data
head(pwt71, n=10)
ls(pwt71)
# Here the pwt71 data is split into country groups along with variable year and rgdpl
countries <- split(pwt71[,2:6], pwt71$isocode)
# Show the first country in the list countries
countries[1]
ls(pwt71)
countries <- split(pwt71[,5:6], pwt71$isocode)
countries <- split(pwt71[c("rgdpl", "year", "yearNA")], pwt71$isocode)
countries[1]
countries <- split(pwt71[c("rgdpl", "year", "yearNA")], pwt71$isocode)
# Show the first country in the list countries
countries[1]
# Create function that finds gdp in earliest year that is not missing
vlookup7 <- function(df){
df[df[2] == min(df[2], na.rm=TRUE), 2]
}
# Use lapply
inigdp <- lapply(countries, vlookup7)
inigdp[1]
# countries <- split(pwt71[,5:6], pwt71$isocode)
countries <- split(pwt71[c("rgdpl", "year", "yearNA")], pwt71$isocode)
# Show the first country in the list countries
countries[1]
# Create function that finds gdp in earliest year that is not missing
vlookup7 <- function(df){
df[df[2] == min(df[2], na.rm=TRUE), 1]
}
# Use lapply
inigdp <- lapply(countries, vlookup7)
inigdp[1]
## @knitr POLCON
#### POLCON: POLCONIII, POLCONV, POLCONJ, law.order ####
# POLCON <- read.delim("~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/Henisz/POLCON_2010_tabsep.txt")
# POLCON <- POLCON[c("CTRYNM", "Year", "POLCONIII", "POLCONV", "POLCONVJ", "Law...Order..from.ICRG.")] # Dropping irrelevant variables
# ls(POLCON) # Checking which variables I have
# write.csv(POLCON, file = "~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/Henisz/POLCON.csv", row.names = FALSE) # Writing data set, because the original is very large
POLCON <- read.csv("~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/Henisz/POLCON.csv")
ls(POLCON)
POLCON$llaw.order <- log(POLCON$Law...Order..from.ICRG.)
# What are the number of observations per country?
summary(POLCON$CTRYNM)
library(foreign)
## Trying to get descriptive statistics by country
# dstats <- function(x)(c(min=min(x), max=max(x))
# POLCON_vars1 <- POLCON[c("Year")]
# by(POLCON_vars1, POLCON$CTRYNM, dstats)
# warnings()
mystats <- function(x, na.omit=TRUE){
if (na.omit)
x <- x[!is.na(x)]
m <- mean(x)
med <- median (x)
n <- length(x)
s <- sd(x)
min <- min(x)
max <- max(x)
skew <- sum((x-m)^3/s^3)/n
kurt <- sum((x-m)^4/s^4)/n - 3
return(c(n=n, mean=m, median=med, max=max, min=min, stdev=s))
}
POLCON_vars <- POLCON[c("POLCONIII", "POLCONV", "POLCONVJ")]
POLCON_desc <- sapply(POLCON_vars, mystats, na.omit=TRUE)
is.matrix(POLCON_desc)
POLCON_desc <- t(POLCON_desc) # Transposing the matrix
class(POLCON_desc)
str(POLCON_desc)
## Trying to get descriptive statistics by country
#install.packages("doBy")
library(doBy)
# Data for POLCONIII
POLCON_desc2 <- summaryBy(POLCONIII~CTRYNM, data=POLCON, FUN=mean, na.rm = TRUE)
POLCON_desc2
POLCON_desc3 <- mystats(POLCON_desc2$POLCONIII.mean)
POLCON_desc3
class(POLCON_desc3) # Should be matrix
# Converting to matrix and trying to name
POLCON_desc3 <- as.matrix(POLCON_desc3)
dimnames(POLCON_desc3) <- list(c("N", "Mean", "Median", "Max", "Min", "Std.dev."),c("POLCONIII"))
POLCON_desc3
# Transposing
POLCON_desc3 <- t(POLCON_desc3)
POLCON_desc3
# For POLCONV
POLCON_desc4 <- summaryBy(POLCONV~CTRYNM, data=POLCON, FUN=mean, na.rm = TRUE)
POLCON_desc4
# Remove countries with missing values
POLCON_desc4 <- POLCON_desc4[complete.cases(POLCON_desc4), ]
POLCON_desc4 <- mystats(POLCON_desc4$POLCONV.mean)
POLCON_desc4
class(POLCON_desc4) # Should be matrix
# Converting to matrix and trying to name
POLCON_desc4 <- as.matrix(POLCON_desc4)
dimnames(POLCON_desc4) <- list(c("N", "Mean", "Median", "Max", "Min", "Std.dev."),c("POLCONV"))
POLCON_desc4
# Transposing
POLCON_desc4 <- t(POLCON_desc4)
POLCON_desc4
# For POLCONVJ
POLCON_desc5 <- summaryBy(POLCONVJ~CTRYNM, data=POLCON, FUN=mean, na.rm = TRUE)
POLCON_desc5
# Remove countries with missing values
POLCON_desc5 <- POLCON_desc5[complete.cases(POLCON_desc5), ]
POLCON_desc5 <- mystats(POLCON_desc5$POLCONVJ.mean)
POLCON_desc5
class(POLCON_desc5) # Should be matrix
# Converting to matrix and trying to name
POLCON_desc5 <- as.matrix(POLCON_desc5)
dimnames(POLCON_desc5) <- list(c("N", "Mean", "Median", "Max", "Min", "Std.dev."),c("POLCONVJ"))
POLCON_desc5
# Transposing
POLCON_desc5 <- t(POLCON_desc5)
POLCON_desc5
# Merge all POLCON measures
POLCON_desc3
POLCON_desc6 <- rbind(POLCON_desc3, POLCON_desc4)
POLCON_desc7 <- rbind(POLCON_desc6, POLCON_desc5)
POLCON_desc7
## Making table with Henisz results
heniszPOLCON <- matrix(c(121,0.25,0.00,0.88,0.00,0.33, 44,0.29,0.26,0.80,0.00,0.27), nrow = 2,
ncol = 6, byrow = TRUE,
dimnames = list(c("POLCON", "POLCONJ"),
c("N", "Mean", "Median", "Max", "Min", "Std.dev.")))
heniszPOLCON
## @knitr POLCON_tab
library(xtable)
print(xtable(POLCON_desc, label='POLCON_tab',caption='Descriptive statistics of the variables on political constraints', table.placement = h)) # Output as LaTeX.
print(xtable(POLCON_desc7, label='POLCON_tab2',caption='Descriptive statistics of the variables on political constraints on a country level', table.placement = h)) # Output as LaTeX.
print(xtable(heniszPOLCON, label='heniszPOLCON',caption='Descriptive statistics of the variables on political constraints as obtained by Henisz (2000) on a country level', table.placement = h)) # Output as LaTeX.
# # Test to see what happens when the option na.omit is set to FALSE
# POLCON_desc2 <- sapply(POLCON_vars, mystats, na.omit=FALSE)
# POLCON_desc2 <- t(POLCON_desc2) # Transposing the matrix
# print(xtable(POLCON_desc2, label='POLCON_tab2',caption='Descriptive statistics of the variables on political constraints (Henisz 2000)', sanitize.text.function = function(x){x}, table.placement = h), digits = 2) # Output as LaTeX.
## @knitr PWT
#### Penn World Table: ki, kg, rgdl ####
# ## Reading PWT data set
pwt71 <- read.csv("~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/pwt71_11302012version/pwt71_wo_country_names_wo_g_vars.csv")
head(pwt71)
# write to Stata file
library(foreign)
write.dta(pwt71, "~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/pwt71a.dta", version=10)
# This command runs the Stata do file in the specified folder
system("PATH=$PATH:/Applications/Stata/Stata.app/Contents/MacOS/:. ; Stata -e do /Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/Master_thesis.do") # It is needed to calculate the growth rate
# Read Stata file
pwt71 <- read.dta("/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/pwt71.dta")
ls(pwt71)
head(pwt71)
# Dropping irrelevant variables
str(pwt71)
pwt71 <- pwt71[c("isocode", "year", "rgdpl", "kg", "ki", "rgdpl2", "gdpgrowth")]
ls(pwt71)
pwt71 <- na.omit(pwt71) # Removing missing observations
head(pwt71, n=25)
# Descriptive statistics for rgdpl
rgdpl <- summaryBy(rgdpl~isocode, data=pwt71, FUN=mean, na.rm = TRUE)
rgdpl
rgdpl <- mystats(rgdpl$rgdpl.mean)
rgdpl
class(rgdpl) # Should be matrix
# Converting to matrix and trying to name
rgdpl <- as.matrix(rgdpl)
dimnames(rgdpl) <- list(c("N", "Mean", "Median", "Max", "Min", "Std.dev."),c("rgdpl"))
rgdpl
# Transposing
rgdpl <- t(rgdpl)
rgdpl
# Descriptive statistics of gdpgrowth
library(plyr)
ls(pwt71)
head(pwt71)
pwt71 <- na.omit(pwt71)
head(pwt71)
gdpgrowth9 <- ddply(pwt71,~isocode,summarise,mean=mean(gdpgrowth, na.rm = TRUE), max.yr=max(year), min.yr=min(year))
gdpgrowth9
png('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_hist.png')
hist(gdpgrowth9$mean, breaks = 20, main=NULL, xlab="GDP growth")
dev.off()
## Create variable with initial gdp value
# Create new variable that is missing if rgdpl is missing and otherwise year to use for function that looks up earliest year that is not missing
pwt71$yearNA <- ifelse(is.na(pwt71$rgdpl), pwt71$yearNA <- NA, pwt71$year)
# Show data
head(pwt71, n=10)
ls(pwt71)
# Here the pwt71 data is split into country groups along with variable year and rgdpl
# countries <- split(pwt71[,5:6], pwt71$isocode)
countries <- split(pwt71[c("rgdpl", "year", "yearNA")], pwt71$isocode)
# Show the first country in the list countries
countries[1]
# Create function that finds gdp in earliest year that is not missing
vlookup7 <- function(df){
df[df[2] == min(df[2], na.rm=TRUE), 1]
}
# Use lapply
inigdp <- lapply(countries, vlookup7)
inigdp[1]
# Remove NAs
inigdp <- lapply(inigdp, function(x) x[!is.na(x)])
inigdp
# Re-assembling the data
pwt71$inigdp <- unsplit(inigdp, pwt71$isocode)
head(pwt71, n=10)
# Deleting the variable yearNA
pwt71$yearNA <- NULL
head(pwt71, n=10)
p
pl
plot(pwt71$inigdp, pwt71$gdpgrowth)
pwt71$linigdp <- log(pwt71$inigdp)
head(pwt71, n=10)
plot(pwt71$linigdp, pwt71$gdpgrowth)
gdpgrowth11 <- ddply(pwt71,~isocode,summarise,mean.growth=mean(gdpgrowth, na.rm = TRUE),mean.inigdp=mean(linigdp))
gdpgrowth11
gdpgrowth11 <- ddply(pwt71,~isocode,summarise,mean.growth=mean(gdpgrowth, na.rm = TRUE),mean.linigdp=mean(linigdp))
plot(gdpgrowth11$mean.linigdp, gdpgrowth11$mean.growth)
png('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_inigdp.png')
plot(gdpgrowth11$mean.linigdp, gdpgrowth11$mean.growth)
png('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_hist2.png')
dev.off()
png('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_inigdp.png')
plot(gdpgrowth11$mean.linigdp, gdpgrowth11$mean.growth)
dev.off()
pdf('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_inigdp.pdf')
plot(gdpgrowth11$mean.linigdp, gdpgrowth11$mean.growth)
dev.off()
gdpgrowth11
pdf('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_inigdp.pdf')
plot(gdpgrowth11$mean.linigdp, gdpgrowth11$mean.growth, height=700)
dev.off()
pdf('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_inigdp.pdf')
plot(gdpgrowth11$mean.linigdp, gdpgrowth11$mean.growth, height=700)
dev.off()
pdf('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_inigdp.pdf', height=700)
plot(gdpgrowth11$mean.linigdp, gdpgrowth11$mean.growth)
dev.off()
pdf('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_inigdp.pdf', height=700, width=700)
plot(gdpgrowth11$mean.linigdp, gdpgrowth11$mean.growth)
dev.off()
pdf('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_inigdp.pdf')
plot(gdpgrowth11$mean.linigdp, gdpgrowth11$mean.growth)
dev.off()
pdf('/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository/figure/growth_inigdp.pdf')
plot(gdpgrowth11$mean.linigdp, gdpgrowth11$mean.growth)
dev.off()
POLCON <- read.delim("~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/Henisz/POLCON_2010_tabsep.txt")
POLCON <-
POLCON[c("CTRYNM", "Year", "POLCONIII", "POLCONV", "POLCONVJ",
"Law...Order..from.ICRG.")] # Dropping irrelevant variables
ls(POLCON) # Checking which variables I have
setwd("/Users/vrangbaek/Dropbox/Studieophold/College_of_Europe/Master_Thesis/CoE_thesis_repository")
## @knitr POLCON
#### POLCON: POLCONIII, POLCONV, POLCONJ, law.order ####
POLCON <- read.delim("~/Dropbox/Studieophold/College_of_Europe/Master_Thesis/Data/Henisz/POLCON_2010_tabsep.txt")
ls(POLCON)
